.TH "Movement" 3 "Thu Oct 9 2014" "MovementTool" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Movement \- 
.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMovement\fP (GameObject entity)"
.br
.RI "\fIInitializes a new instance of the \fBMovement\fP class\&. \fP"
.ti -1c
.RI "\fBMovement\fP (GameObject entity, string data)"
.br
.RI "\fIInitializes a new instance of the \fBMovement\fP class from a data string\&. \fP"
.ti -1c
.RI "void \fBShiftMovementByPoint\fP (Vector3 shift)"
.br
.RI "\fIShifts the movement by point shift\&. \fP"
.ti -1c
.RI "void \fBSetPrimitiveDelta\fP (int idx, float delta)"
.br
.RI "\fISets the delta tuning value for the primitive at the specified index\&. \fP"
.ti -1c
.RI "void \fBSaveMovementToFile\fP (string filename)"
.br
.RI "\fISaves the movement to file\&. \fP"
.ti -1c
.RI "void \fBPostMovement\fP (string url, string movementName)"
.br
.RI "\fIPOSTs the movement to the specified URL\&. \fP"
.ti -1c
.RI "string \fBGetPrimitiveAsString\fP (int index)"
.br
.RI "\fIGets the primitive state\&. \fP"
.ti -1c
.RI "void \fBChainLine\fP (Vector3 end, float dur)"
.br
.RI "\fIChains a LINE primitive to the current movement \fP"
.ti -1c
.RI "void \fBChainWait\fP (float dur)"
.br
.RI "\fIChains a WAIT primitive to the current movement \fP"
.ti -1c
.RI "void \fBChainSin\fP (Vector3 end, float dur, float amplitude, float freq, float phase=0)"
.br
.RI "\fIChains a SIN primitive to the current movement \fP"
.ti -1c
.RI "void \fBChainCurve\fP (Vector3 end, float dur, Vector3 dep=default(Vector3))"
.br
.RI "\fIChains a CURVE primitive to the current movement \fP"
.ti -1c
.RI "void \fBChainCounterClockwiseCircle\fP (Vector3 center, float radians, float duration)"
.br
.RI "\fIChains a counter clock wise CIRCLE primitive to the current movement \fP"
.ti -1c
.RI "void \fBChainClockwiseCircle\fP (Vector3 center, float radians, float duration)"
.br
.RI "\fIChains a clock wise CIRCLE primitive to the current movement \fP"
.ti -1c
.RI "void \fBAddLine\fP (Vector3 start, Vector3 end, float dur)"
.br
.RI "\fIAdds a LINE primitive to the current movement\&. \fP"
.ti -1c
.RI "void \fBAddSin\fP (Vector3 start, Vector3 end, float dur, float amplitude, float freq, float phase=0)"
.br
.RI "\fIAdds a SIN primitive to the current movement\&. \fP"
.ti -1c
.RI "void \fBAddCurve\fP (Vector3 start, Vector3 end, float dur, Vector3 dep=default(Vector3))"
.br
.RI "\fIAdds a CURVE primitive to the current movement\&. \fP"
.ti -1c
.RI "void \fBAddWait\fP (float waitTime, Vector3 waitPoint=default(Vector3))"
.br
.RI "\fIAdds a WAIT primitive to the current movement\&. \fP"
.ti -1c
.RI "void \fBAddCounterClockwiseCircle\fP (Vector3 start, Vector3 center, float radians, float duration)"
.br
.RI "\fIAdds a counter clock wise CIRCLE primitive to the current movement\&. \fP"
.ti -1c
.RI "void \fBAddClockwiseCircle\fP (Vector3 start, Vector3 center, float radians, float duration)"
.br
.RI "\fIAdds a clock wise CIRCLE primitive to the current movement\&. \fP"
.ti -1c
.RI "void \fBStart\fP ()"
.br
.RI "\fIStart this instance\&. Begins the movement timers\&. \fBMovement\&.Update()\fP needs to be called for motion to actually occur\&. \fP"
.ti -1c
.RI "void \fBSetRepeat\fP (int num=0)"
.br
.RI "\fISets the number of repetitions of this movement\&. If left empty, the movement repeats infinitely\&. \fP"
.ti -1c
.RI "void \fBToggleTrail\fP ()"
.br
.RI "\fIToggles the trail left behind by the gameObject that the movement is attached to\&. \fP"
.ti -1c
.RI "void \fBsetMarker\fP (GameObject m)"
.br
.RI "\fISets the marker that will be left behind if trail is turned on\&. \fP"
.ti -1c
.RI "void \fBUpdate\fP ()"
.br
.RI "\fIUpdate this instance movement\&. Must be called from Monobehaviour::Update() \fP"
.in -1c
.SS "Static Public Member Functions"

.in +1c
.ti -1c
.RI "static \fBMovement\fP \fBInitMovementFromFile\fP (GameObject entity, string filename)"
.br
.RI "\fIInits the movement from file\&. The file must have been created by this class\&. \fP"
.ti -1c
.RI "static \fBMovement\fP \fBInitMovementFromUrl\fP (GameObject entity, string url)"
.br
.RI "\fIGETs the movement state from a URL\&. The state must have been stored by this class\&. \fP"
.in -1c
.SS "Properties"

.in +1c
.ti -1c
.RI "object \fBthis[int i]\fP\fC [get]\fP"
.br
.RI "\fIGets the \fBMovement\fP at the specified index\&. \fP"
.in -1c
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Movement\&.Movement (GameObjectentity)\fC [inline]\fP"

.PP
Initializes a new instance of the \fBMovement\fP class\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP Entity\&.
.RE
.PP

.SS "Movement\&.Movement (GameObjectentity, stringdata)\fC [inline]\fP"

.PP
Initializes a new instance of the \fBMovement\fP class from a data string\&. 
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP Entity\&.
.br
\fIdata\fP Data\&.
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "void Movement\&.AddClockwiseCircle (Vector3start, Vector3center, floatradians, floatduration)\fC [inline]\fP"

.PP
Adds a clock wise CIRCLE primitive to the current movement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP Start\&.
.br
\fIcenter\fP Center\&.
.br
\fIradians\fP Radians\&.
.br
\fIduration\fP Duration\&.
.RE
.PP

.SS "void Movement\&.AddCounterClockwiseCircle (Vector3start, Vector3center, floatradians, floatduration)\fC [inline]\fP"

.PP
Adds a counter clock wise CIRCLE primitive to the current movement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP Start\&.
.br
\fIcenter\fP Center\&.
.br
\fIradians\fP Radians\&.
.br
\fIduration\fP Duration\&.
.RE
.PP

.SS "void Movement\&.AddCurve (Vector3start, Vector3end, floatdur, Vector3dep = \fCdefault(Vector3)\fP)\fC [inline]\fP"

.PP
Adds a CURVE primitive to the current movement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP Start\&.
.br
\fIend\fP End\&.
.br
\fIdur\fP Dur\&.
.br
\fIdep\fP Dep\&.
.RE
.PP

.SS "void Movement\&.AddLine (Vector3start, Vector3end, floatdur)\fC [inline]\fP"

.PP
Adds a LINE primitive to the current movement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP Start\&.
.br
\fIend\fP End\&.
.br
\fIdur\fP Dur\&.
.RE
.PP

.SS "void Movement\&.AddSin (Vector3start, Vector3end, floatdur, floatamplitude, floatfreq, floatphase = \fC0\fP)\fC [inline]\fP"

.PP
Adds a SIN primitive to the current movement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstart\fP Start\&.
.br
\fIend\fP End\&.
.br
\fIdur\fP Dur\&.
.br
\fIamplitude\fP Amplitude\&.
.br
\fIfreq\fP Freq\&.
.br
\fIphase\fP Phase\&.
.RE
.PP

.SS "void Movement\&.AddWait (floatwaitTime, Vector3waitPoint = \fCdefault(Vector3)\fP)\fC [inline]\fP"

.PP
Adds a WAIT primitive to the current movement\&. 
.PP
\fBParameters:\fP
.RS 4
\fIwaitTime\fP Wait time\&.
.br
\fIwaitPoint\fP Wait point\&.
.RE
.PP

.SS "void Movement\&.ChainClockwiseCircle (Vector3center, floatradians, floatduration)\fC [inline]\fP"

.PP
Chains a clock wise CIRCLE primitive to the current movement 
.PP
\fBParameters:\fP
.RS 4
\fIcenter\fP Center\&.
.br
\fIradians\fP Radians\&.
.br
\fIduration\fP Duration\&.
.RE
.PP

.SS "void Movement\&.ChainCounterClockwiseCircle (Vector3center, floatradians, floatduration)\fC [inline]\fP"

.PP
Chains a counter clock wise CIRCLE primitive to the current movement 
.PP
\fBParameters:\fP
.RS 4
\fIcenter\fP Center\&.
.br
\fIradians\fP Radians\&.
.br
\fIduration\fP Duration\&.
.RE
.PP

.SS "void Movement\&.ChainCurve (Vector3end, floatdur, Vector3dep = \fCdefault(Vector3)\fP)\fC [inline]\fP"

.PP
Chains a CURVE primitive to the current movement 
.PP
\fBParameters:\fP
.RS 4
\fIend\fP End\&.
.br
\fIdur\fP Dur\&.
.br
\fIdep\fP Dep\&.
.RE
.PP

.SS "void Movement\&.ChainLine (Vector3end, floatdur)\fC [inline]\fP"

.PP
Chains a LINE primitive to the current movement 
.PP
\fBParameters:\fP
.RS 4
\fIend\fP End\&.
.br
\fIdur\fP Dur\&.
.RE
.PP

.SS "void Movement\&.ChainSin (Vector3end, floatdur, floatamplitude, floatfreq, floatphase = \fC0\fP)\fC [inline]\fP"

.PP
Chains a SIN primitive to the current movement 
.PP
\fBParameters:\fP
.RS 4
\fIend\fP End\&.
.br
\fIdur\fP Dur\&.
.br
\fIamplitude\fP Amplitude\&.
.br
\fIfreq\fP Freq\&.
.br
\fIphase\fP Phase\&.
.RE
.PP

.SS "void Movement\&.ChainWait (floatdur)\fC [inline]\fP"

.PP
Chains a WAIT primitive to the current movement 
.PP
\fBParameters:\fP
.RS 4
\fIdur\fP Dur\&.
.RE
.PP

.SS "string Movement\&.GetPrimitiveAsString (intindex)\fC [inline]\fP"

.PP
Gets the primitive state\&. 
.PP
\fBReturns:\fP
.RS 4
The primitive as string\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP Index\&.
.RE
.PP

.SS "static \fBMovement\fP Movement\&.InitMovementFromFile (GameObjectentity, stringfilename)\fC [inline]\fP, \fC [static]\fP"

.PP
Inits the movement from file\&. The file must have been created by this class\&. 
.PP
\fBReturns:\fP
.RS 4
The movement from file\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP Entity\&.
.br
\fIfilename\fP Filename\&.
.RE
.PP

.SS "static \fBMovement\fP Movement\&.InitMovementFromUrl (GameObjectentity, stringurl)\fC [inline]\fP, \fC [static]\fP"

.PP
GETs the movement state from a URL\&. The state must have been stored by this class\&. 
.PP
\fBReturns:\fP
.RS 4
The movement from URL\&.
.RE
.PP
\fBParameters:\fP
.RS 4
\fIentity\fP Entity\&.
.br
\fIurl\fP URL\&.
.RE
.PP

.SS "void Movement\&.PostMovement (stringurl, stringmovementName)\fC [inline]\fP"

.PP
POSTs the movement to the specified URL\&. 
.PP
\fBParameters:\fP
.RS 4
\fIurl\fP URL\&.
.br
\fImovementName\fP \fBMovement\fP name\&.
.RE
.PP

.SS "void Movement\&.SaveMovementToFile (stringfilename)\fC [inline]\fP"

.PP
Saves the movement to file\&. 
.PP
\fBParameters:\fP
.RS 4
\fIfilename\fP Filename\&.
.RE
.PP

.SS "void Movement\&.setMarker (GameObjectm)\fC [inline]\fP"

.PP
Sets the marker that will be left behind if trail is turned on\&. 
.PP
\fBParameters:\fP
.RS 4
\fIm\fP M\&.
.RE
.PP

.SS "void Movement\&.SetPrimitiveDelta (intidx, floatdelta)\fC [inline]\fP"

.PP
Sets the delta tuning value for the primitive at the specified index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIidx\fP Index\&.
.br
\fIdelta\fP Delta\&.
.RE
.PP

.SS "void Movement\&.SetRepeat (intnum = \fC0\fP)\fC [inline]\fP"

.PP
Sets the number of repetitions of this movement\&. If left empty, the movement repeats infinitely\&. 
.PP
\fBParameters:\fP
.RS 4
\fInum\fP Number\&.
.RE
.PP

.SS "void Movement\&.ShiftMovementByPoint (Vector3shift)\fC [inline]\fP"

.PP
Shifts the movement by point shift\&. 
.PP
\fBParameters:\fP
.RS 4
\fIshift\fP Shift\&.
.RE
.PP

.SS "void Movement\&.Start ()\fC [inline]\fP"

.PP
Start this instance\&. Begins the movement timers\&. \fBMovement\&.Update()\fP needs to be called for motion to actually occur\&. 
.SS "void Movement\&.ToggleTrail ()\fC [inline]\fP"

.PP
Toggles the trail left behind by the gameObject that the movement is attached to\&. 
.SS "void Movement\&.Update ()\fC [inline]\fP"

.PP
Update this instance movement\&. Must be called from Monobehaviour::Update() 
.SH "Property Documentation"
.PP 
.SS "object Movement\&.this[int i]\fC [get]\fP"

.PP
Gets the \fBMovement\fP at the specified index\&. 
.PP
\fBParameters:\fP
.RS 4
\fIi\fP The index\&.
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for MovementTool from the source code\&.
